[{"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\index.js":"1","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\reportWebVitals.js":"2","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\App.js":"3","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\questions.js":"4","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\Quiz.js":"5","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\Question.js":"6","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\Header.js":"7","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\DashBoard.js":"8","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\auth\\Auth0ProviderWithHistory.js":"9","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\Admin.js":"10","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\User.js":"11","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\CreateQuiz.js":"12","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\AddQuestion.js":"13","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\QuizesC.js":"14","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\Loading.js":"15","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\Profile.js":"16","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\AppErrorBoundary.js":"17"},{"size":792,"mtime":1609048811686,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1262,"mtime":1609069083433,"results":"21","hashOfConfig":"19"},{"size":1103,"mtime":1608047577059,"results":"22","hashOfConfig":"19"},{"size":2492,"mtime":1609054069762,"results":"23","hashOfConfig":"19"},{"size":1116,"mtime":1609054113856,"results":"24","hashOfConfig":"19"},{"size":1478,"mtime":1609068748939,"results":"25","hashOfConfig":"19"},{"size":1862,"mtime":1609088383666,"results":"26","hashOfConfig":"19"},{"size":761,"mtime":1609080484032,"results":"27","hashOfConfig":"19"},{"size":1626,"mtime":1609053649487,"results":"28","hashOfConfig":"19"},{"size":522,"mtime":1609054277191,"results":"29","hashOfConfig":"19"},{"size":4871,"mtime":1609089130152,"results":"30","hashOfConfig":"19"},{"size":2569,"mtime":1609089358456,"results":"31","hashOfConfig":"19"},{"size":3326,"mtime":1609083482964,"results":"32","hashOfConfig":"19"},{"size":165,"mtime":1608962226162,"results":"33","hashOfConfig":"19"},{"size":262,"mtime":1608962588814,"results":"34","hashOfConfig":"19"},{"size":899,"mtime":1609049328582,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"hzsqkl",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\index.js",[],["76","77"],"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\reportWebVitals.js",[],"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\App.js",[],"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\questions.js",[],["78","79"],"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\Quiz.js",[],"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\Question.js",[],["80","81"],"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\Header.js",[],"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\DashBoard.js",["82","83"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AppContext } from \"../App\";\r\n\r\nimport Admin from \"./Admin\";\r\nimport Loading from \"./Loading\";\r\nimport User from \"./User\";\r\n\r\nfunction PublicPage() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Welcome to leader boar website.</h1>\r\n\t\t\t<h3>Please login to see your quizes</h3>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport const QuizContext = React.createContext();\r\n\r\nfunction DashBoard(props) {\r\n\tconst { authContext } = useContext(AppContext);\r\n\tconst {\r\n\t\tisAuthenticated,\r\n\t\tgetAccessTokenSilently,\r\n\t\tuser,\r\n\t\t// isLoading,\r\n\t} = authContext;\r\n\tconst [quizes, setQuizes] = useState([]);\r\n\tconst [role, setRole] = useState(\"\");\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst callapi = async () => {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\ttry {\r\n\t\t\t\tconst token = await getAccessTokenSilently({\r\n\t\t\t\t\tscope: \"read:demo\",\r\n\t\t\t\t});\r\n\t\t\t\tconst response = await fetch(`http://localhost:3010/api/get-quizes`, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"content-type\": \"application/json\",\r\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst responseData = await response.json();\r\n\t\t\t\tconsole.log(responseData);\r\n\t\t\t\tsetQuizes(responseData.quizes);\r\n\t\t\t\tsetRole(responseData.role);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"Error from get quizes api: \", error);\r\n\t\t\t\tsetQuizes([\"\"]);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t// throw new Error(error);\r\n\t\t\t}\r\n\t\t};\r\n\t\tcallapi();\r\n\t}, []);\r\n\r\n\tif (isLoading) {\r\n\t\treturn <Loading />;\r\n\t}\r\n\treturn (\r\n\t\t<div className='dashboard'>\r\n\t\t\t<QuizContext.Provider value={{ quizes, role }}>\r\n\t\t\t\t{isAuthenticated ? (\r\n\t\t\t\t\trole === \"admin\" ? (\r\n\t\t\t\t\t\t<Admin quizes={quizes} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<User quizes={quizes} />\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<PublicPage />\r\n\t\t\t\t)}\r\n\t\t\t</QuizContext.Provider>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DashBoard;\r\n","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\auth\\Auth0ProviderWithHistory.js",[],"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\Admin.js",[],"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\User.js",[],"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\CreateQuiz.js",["84","85","86"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport AddQuestion from \"./AddQuestion\";\r\n\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { QuizContext } from \"./DashBoard\";\r\n\r\nArray.prototype.addQuestionObj = function (obj) {\r\n\tconsole.log(\"entered prototype func\");\r\n\tfor (const it of this.values()) {\r\n\t\tif (it.questionId === obj.questionId) {\r\n\t\t\t// it = obj;\r\n\t\t\tthis.splice(this.indexOf(it), 1, obj);\r\n\t\t\tconsole.log(\"replaced obj\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tthis.push(obj);\r\n\tconsole.log(\"pushed obj\");\r\n};\r\n\r\nconst dummyQuestion = {\r\n\tquestionId: \"_1\",\r\n\tquestion: \"\",\r\n\tchoices: [],\r\n\tcorrectAnswer: -1,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n\tlet { title: localTitle = \"\", questions: localQuestions = [] } = state;\r\n\r\n\tswitch (action.type) {\r\n\t\tcase \"titleChange\":\r\n\t\t\tconsole.log(\"title change\");\r\n\t\t\tlocalTitle = action.payload.event.target.value;\r\n\t\t\treturn { title: localTitle, questions: localQuestions };\r\n\r\n\t\tcase \"addQuestion\":\r\n\t\t\t// let  = localQuestions.length + 1;\r\n\t\t\tconsole.log(\"addQuestion\");\r\n\t\t\tconst {\r\n\t\t\t\tquestionId = action.payload.id,\r\n\t\t\t\tquestion = \"\",\r\n\t\t\t\tchoices = [],\r\n\t\t\t\tcorrectAnswer = -1,\r\n\t\t\t} = action.payload;\r\n\t\t\tlocalQuestions.addQuestionObj({\r\n\t\t\t\tquestionId,\r\n\t\t\t\tquestion,\r\n\t\t\t\tchoices,\r\n\t\t\t\tcorrectAnswer,\r\n\t\t\t});\r\n\t\t\treturn { title: localTitle, questions: localQuestions };\r\n\r\n\t\tcase \"deleteQuestion\":\r\n\t\t\tlocalQuestions = localQuestions.filter(\r\n\t\t\t\t(question) => question.questionId !== action.payload.id\r\n\t\t\t);\r\n\t\t\treturn { title: localTitle, questions: localQuestions };\r\n\r\n\t\tcase \"submit\":\r\n\t\t\tconsole.log(\"submitted\");\r\n\t\t\tif (localTitle === \"\") {\r\n\t\t\t\talert(\"Please add title\");\r\n\t\t\t\treturn { title: localTitle, questions: localQuestions };\r\n\t\t\t}\r\n\t\t\tconst { id: localId = Date.now(), user, responses } = action.payload;\r\n\t\t\tlet newQuiz = {\r\n\t\t\t\tquizid: parseInt(localId),\r\n\t\t\t\tcreatorId: user.sub,\r\n\t\t\t\ttitle: localTitle,\r\n\t\t\t\tquestions: localQuestions,\r\n\t\t\t\tresponses,\r\n\t\t\t};\r\n\t\t\tfetch(\"http://localhost:3010/api/create-quiz\", {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"content-type\": \"application/json\",\r\n\t\t\t\t\tAuthorization: `Bearer ${action.payload.token}`,\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(newQuiz),\r\n\t\t\t\tmethod: [\"POST\"],\r\n\t\t\t})\r\n\t\t\t\t.then((resp) => {\r\n\t\t\t\t\tif (resp.status == \"ok\") {\r\n\t\t\t\t\t\tconsole.log(\"Created or edited quiz successfully\", resp);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\tconsole.log(\"Error in creating new quiz\", e);\r\n\t\t\t\t});\r\n\t\t\taction.payload.history.push(\"/dashboard\");\r\n\t\t\treturn { title: localTitle, questions: localQuestions };\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.log(\"nothing was asked from the reducer\");\r\n\t\t\treturn { title: localTitle, questions: localQuestions };\r\n\t}\r\n};\r\n\r\nfunction CreateQuiz() {\r\n\t// let initialState = [];\r\n\t// let initialtitle = \"\";\r\n\tlet { id } = useParams();\r\n\r\n\tconst { quizes } = useContext(QuizContext);\r\n\r\n\tlet quizResponses = [];\r\n\tconst init = () => {\r\n\t\tif (id === undefined) {\r\n\t\t\tid = Date.now();\r\n\t\t\treturn {\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\tquestions: [dummyQuestion],\r\n\t\t\t};\r\n\t\t}\r\n\t\tconsole.log(\"from init func: \", quizes);\r\n\t\tconst editable = quizes.filter(\r\n\t\t\t(quiz) => parseInt(quiz.quizid) === parseInt(id)\r\n\t\t);\r\n\t\tconsole.log(\"editable\", editable);\r\n\t\tquizResponses = editable.responses;\r\n\t\tconsole.log(\"editable.title\", editable[0].title);\r\n\t\tconsole.log(\"editable.questions\", editable[0].questions);\r\n\t\treturn { title: editable[0].title, questions: editable[0].questions };\r\n\t};\r\n\r\n\tconst initialState = init();\r\n\r\n\tconst [quizState, dispatch] = useReducer(reducer, initialState);\r\n\r\n\tconst history = useHistory();\r\n\tconst { isAuthenticated, getAccessTokenSilently, user } = useAuth0();\r\n\r\n\tconst sendResponses = async (obj) => {\r\n\t\tif (isAuthenticated) {\r\n\t\t\tlet token = await getAccessTokenSilently({\r\n\t\t\t\tscope: \"read:demo\",\r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: \"submit\",\r\n\t\t\t\tpayload: { token, user, history, responses: quizResponses, id },\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<input\r\n\t\t\t\tclassName='quiz-title'\r\n\t\t\t\ttype='text'\r\n\t\t\t\tplaceholder='Title'\r\n\t\t\t\tvalue={quizState.title}\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tdispatch({ type: \"titleChange\", payload: { event: e } });\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{quizState.questions.map((question, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={index} className='question-container'>\r\n\t\t\t\t\t\t<AddQuestion\r\n\t\t\t\t\t\t\taddQuestion={dispatch}\r\n\t\t\t\t\t\t\tquizQuestion={question}\r\n\t\t\t\t\t\t\tquestionId={`_${index + 1}`}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t<button\r\n\t\t\t\ttitle='Adds an empty question'\r\n\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: \"addQuestion\",\r\n\t\t\t\t\t\tpayload: { id: `_${quizState.questions.length + 1}` },\r\n\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t+\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tonClick={sendResponses}\r\n\t\t\t\ttitle='Create Quiz with given title and questions'\r\n\t\t\t>\r\n\t\t\t\tSubmit\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CreateQuiz;\r\n","F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\AddQuestion.js",[],"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\QuizesC.js",[],"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\Loading.js",[],"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\components\\Profile.js",[],["87","88"],"F:\\Internship\\bestenlist\\Project\\leader-boards\\src\\AppErrorBoundary.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"89","replacedBy":"95"},{"ruleId":"91","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":24,"column":3,"nodeType":"99","messageId":"100","endLine":24,"endColumn":7},{"ruleId":"101","severity":1,"message":"102","line":58,"column":5,"nodeType":"103","endLine":58,"endColumn":7,"suggestions":"104"},{"ruleId":"97","severity":1,"message":"105","line":1,"column":29,"nodeType":"99","messageId":"100","endLine":1,"endColumn":38},{"ruleId":"106","severity":1,"message":"107","line":8,"column":1,"nodeType":"108","messageId":"109","endLine":20,"endColumn":2},{"ruleId":"110","severity":1,"message":"111","line":84,"column":22,"nodeType":"112","messageId":"109","endLine":84,"endColumn":24},{"ruleId":"89","replacedBy":"113"},{"ruleId":"91","replacedBy":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],["115"],["116"],["115"],["116"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAccessTokenSilently'. Either include it or remove the dependency array.","ArrayExpression",["117"],"'useEffect' is defined but never used.","no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["115"],["116"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [getAccessTokenSilently]",{"range":"120","text":"121"},[1461,1463],"[getAccessTokenSilently]"]